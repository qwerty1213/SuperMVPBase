apply plugin: 'com.android.application'
def config = rootProject.ext.android
def depend = rootProject.ext.dependencies
android {
    compileSdkVersion config.compileSdkVersion
    defaultConfig {
        applicationId applicationId
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName
        testInstrumentationRunner config.androidJUnitRunner
        multiDexEnabled true
        ndk {
            //选择要添加的对应cpu类型的.so库。
//            abiFilters 'armeabi', 'armeabi-v7a', 'armeabi-v8a', 'x86',
//                    'x86_64', 'mips', 'mips64'
            abiFilters 'armeabi-v7a', 'x86'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

//    signingConfigs {
//        debug {
//            keyAlias "shanxianglaoshi"
//            storeFile file('shanxiangKeystore.jks')
//            storePassword "shanxiang"
//            keyPassword "shanxianglaoshi"
//        }
//    }

    sourceSets {
        main {
            jni.srcDirs = []
            jniLibs.srcDirs = ['libs']
            res.srcDirs =
                    [
                            'src/main/res',//main
                            'src/main/restoolbar',//toolbar
                    ]
        }
    }

    //多渠道打包
    flavorDimensions "default"
    productFlavors {
        yingyongbao { dimension "default" }
        huawei { dimension "default" }
        baidu { dimension "default" }
        xiaomi { dimension "default" }
        qh360 { dimension "default" }
        web { dimension "default" }
    }
    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }

    //自定义打包时apk名字
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            // SXLS_时间_渠道名_版本名.apk  还可以拼接其他app内容：variant.versionCode  variant.buildType.name
            outputFileName = "Tool_${releaseTime()}_${variant.versionName}_${variant.name}.apk"
        }
    }
}

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

dependencies {
    api depend.fileInculdeJL
    api depend.design
    api depend.appcompatV7
    api depend.constraintLayout
    testImplementation depend.junit
    androidTestImplementation depend.textRunner
    androidTestImplementation depend.espressoCore
    //注解
    api depend.butterknife
    annotationProcessor depend.butterknifeCompiler
    api depend.autolayout
    //网络请求
    api depend.okgo
    api depend.okrx2
    api depend.okserver
    //MultiDex分包
    api depend.multidex
    //解析
    api depend.gson
    //图片展示
    api depend.glide
    annotationProcessor depend.glideCompiler
    api depend.glideTransformations
    //列表展示
    api depend.recyclerview
    //adapter刷新加载
    api depend.baseRecyclerViewAdapterHelper
    api depend.chuckLibrary
    api depend.spinKit

    api project(path: ':utilslibrary')

}
